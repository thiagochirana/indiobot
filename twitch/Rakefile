require 'active_record'
require 'rake'
require 'sqlite3'
require_relative 'util/env'
include Env

DB_FILE_PATH="#{DB_PATH}/#{DB_NAME}"

namespace :db do

  desc 'Cria o banco de dados'
  task :create do
    if File.exist?(DB_FILE_PATH)
      puts "Banco de dados #{DB_FILE_PATH} já foi criado!\n\tse deseja o apagar, execute o comando rake db:drop"
    else
      begin
        ActiveRecord::Base.establish_connection(db_config)
        ActiveRecord::Base.connection
        puts "Banco de dados #{DB_FILE_PATH} criado com sucesso!"
      rescue StandardError => e
        puts "Erro ao criar banco de dados: #{e.message}"
        puts e.backtrace
      end
    end
  end  

  desc 'Remove o banco de dados'
  task :drop do
    begin
      if File.exist?(DB_FILE_PATH)
        File.delete(DB_FILE_PATH)
        puts "Banco de dados #{DB_FILE_PATH} removido com sucesso!"
      else
        puts "Banco de dados #{DB_FILE_PATH} não existe."
      end
    rescue StandardError => e
      puts "Erro ao remover banco de dados: #{e.message}"
    end
  end

  desc 'Executa as migrations'
  task :migrate => :environment do
    begin
      migration_path = File.join(File.dirname(__FILE__), 'db', 'migrate')

      if !Dir.exist?(migration_path)
        raise "Diretório de migrations não encontrado em #{migration_path}"
      end

      migration_context = ActiveRecord::MigrationContext.new(migration_path)
      migration_context.migrate

      puts 'Migrations aplicadas com sucesso!'
    rescue StandardError => e
      puts "Erro ao executar migrations: #{e.message}"
      puts e.backtrace
    end
  end

  task :environment do
    begin
      ActiveRecord::Base.establish_connection(db_config)
      ActiveRecord::Base.connection
    rescue StandardError => e
      puts "Failed to establish database connection: #{e.message}"
      raise e
    end
  end
end

def db_config
  {
    adapter: 'sqlite3',
    database: DB_FILE_PATH,      # Caminho do arquivo do banco de dados
    pool: 5,                     # Tamanho do pool de conexões
    timeout: 5000                # Timeout em milissegundos
  }
end

